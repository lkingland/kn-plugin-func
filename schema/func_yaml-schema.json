{
	"$schema": "http://json-schema.org/draft-04/schema#",
	"$ref": "#/definitions/Function",
	"definitions": {
		"BuildSpec": {
			"properties": {
				"git": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/Git",
					"description": "Git stores information about an optionally associated git repository."
				},
				"builderImages": {
					"patternProperties": {
						".*": {
							"type": "string"
						}
					},
					"type": "object",
					"description": "BuilderImages define optional explicit builder images to use by\nbuilder implementations in leau of the in-code defaults.  They key\nis the builder's short name.  For example:\nbuilderImages:\n  pack: example.com/user/my-pack-node-builder\n  s2i: example.com/user/my-s2i-node-builder"
				},
				"buildpacks": {
					"items": {
						"type": "string"
					},
					"type": "array",
					"description": "Optional list of buildpacks to use when building the function"
				},
				"builder": {
					"enum": [
						"pack",
						"s2i"
					],
					"type": "string",
					"description": "Builder is the name of the subsystem that will complete the underlying\nbuild (pack, s2i, etc)"
				},
				"buildEnvs": {
					"items": {
						"$schema": "http://json-schema.org/draft-04/schema#",
						"$ref": "#/definitions/Env"
					},
					"type": "array",
					"description": "Build Env variables to be set"
				},
				"buildCommand": {
					"type": "string",
					"description": "BuildCOmmand specifies a custom explicit command to use when building the function\nusing the Host builder. Currently only supported by the Host builder.\n\nThis might be useful when, for example, the function is written in\nGo and the function developer needs Libc compatibility, in which case\nthe default command will need to be replaced with:\ngo build -ldflags \"-linkmode 'external' -extldflags '-static'\""
				},
				"pvcSize": {
					"type": "string",
					"description": "PVCSize specifies the size of persistent volume claim used to store function\nwhen using deployment and remote build process (only relevant when Remote is true)."
				}
			},
			"additionalProperties": false,
			"type": "object",
			"description": "BuildSpec"
		},
		"DeploySpec": {
			"properties": {
				"namespace": {
					"type": "string",
					"description": "Namespace into which the function is deployed on supported platforms."
				},
				"remote": {
					"type": "boolean",
					"description": "Remote indicates the deployment (and possibly build) process are to\nbe triggered in a remote environment rather than run locally."
				},
				"annotations": {
					"patternProperties": {
						".*": {
							"type": "string"
						}
					},
					"type": "object",
					"description": "Map containing user-supplied annotations\nExample: { \"division\": \"finance\" }"
				},
				"options": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/Options",
					"description": "Options to be set on deployed function (scaling, etc.)"
				},
				"labels": {
					"items": {
						"$schema": "http://json-schema.org/draft-04/schema#",
						"$ref": "#/definitions/Label"
					},
					"type": "array",
					"description": "Map of user-supplied labels"
				},
				"healthEndpoints": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/HealthEndpoints",
					"description": "Health endpoints specified by the language pack"
				}
			},
			"additionalProperties": false,
			"type": "object",
			"description": "DeploySpec"
		},
		"Env": {
			"properties": {
				"name": {
					"pattern": "^[-._a-zA-Z][-._a-zA-Z0-9]*$",
					"type": "string",
					"description": "TODO: remove pointers"
				},
				"value": {
					"type": "string"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"Function": {
			"required": [
				"specVersion",
				"domain",
				"registry",
				"image",
				"created"
			],
			"properties": {
				"specVersion": {
					"type": "string",
					"description": "SpecVersion at which this function is known to be compatible.\nMore specifically, it is the highest migration which has been applied.\nFor details see the .Migrated() and .Migrate() methods."
				},
				"name": {
					"pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
					"type": "string",
					"description": "Name of the function."
				},
				"domain": {
					"type": "string",
					"description": "Domain of the function optionally specifies the domain to use as the\nroute of the function. By default the cluster's default will be used.\nNote that the value defined here must be one which the cluster is\nconfigured to recognize, or this will have no effect and the cluster\ndefault will be applied.  This value shuld therefore ideally be\nvalidated by the client.\n\nMatching a valid domain name using a regular expression can be quite\ncomplex, as there are many rules for domain names. However, below uses\na simplified regular expression that matches most common domain names:\n\n 1 can contain letters (a-z, A-Z), digits (0-9), and hyphens (-).\n 2 cannot start or end with a hyphen.\n 3 Domain name components can be up to 63 characters long.\n 4 The top-level domain (TLD) should have at least two letters and max six.\n\nThis regular expression doesn't cover all possible domain names, as there\nare more complex rules regarding internationalized domain names (IDNs) and\nnew top-level domains (TLDs). Additionally, it does not validate against\nthe list of known TLDs. However, it should work for most common domains."
				},
				"runtime": {
					"type": "string",
					"description": "Runtime is the language plus context.  nodejs|go|quarkus|rust etc."
				},
				"registry": {
					"type": "string",
					"description": "Registry at which to store interstitial containers, in the form\n[registry]/[user]."
				},
				"image": {
					"type": "string",
					"description": "Optional full OCI image tag in form:\n  [registry]/[namespace]/[name]:[tag]\nexample:\n  quay.io/alice/my.function.name\nRegistry is optional and is defaulted to DefaultRegistry\nexample:\n  alice/my.function.name\nIf Image is provided, it overrides the default of concatenating\n\"Registry+Name:latest\" to derive the Image."
				},
				"imageDigest": {
					"type": "string",
					"description": "SHA256 hash of the latest image that has been built"
				},
				"created": {
					"type": "string",
					"description": "Created time is the moment that creation was successfully completed\naccording to the client which is in charge of what constitutes being\nfully \"Created\" (aka initialized)",
					"format": "date-time"
				},
				"invoke": {
					"type": "string",
					"description": "Invoke defines hints for use when invoking this function.\nSee Client.Invoke for usage."
				},
				"build": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/BuildSpec",
					"description": "BuildSpec define the build properties for a function"
				},
				"run": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/RunSpec",
					"description": "RunSpec define the runtime properties for a function"
				},
				"deploy": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/DeploySpec",
					"description": "DeploySpec define the deployment properties for a function"
				}
			},
			"additionalProperties": false,
			"type": "object",
			"description": "Function"
		},
		"Git": {
			"properties": {
				"url": {
					"type": "string"
				},
				"revision": {
					"type": "string"
				},
				"contextDir": {
					"type": "string"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"HealthEndpoints": {
			"properties": {
				"liveness": {
					"type": "string"
				},
				"readiness": {
					"type": "string"
				}
			},
			"additionalProperties": false,
			"type": "object",
			"description": "HealthEndpoints specify the liveness and readiness endpoints for a Runtime"
		},
		"Label": {
			"required": [
				"key"
			],
			"properties": {
				"key": {
					"pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/)?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$",
					"type": "string",
					"description": "Key consist of optional prefix part (ended by '/') and name part\nPrefix part validation pattern: [a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\nName part validation pattern: ([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]"
				},
				"value": {
					"pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$",
					"type": "string"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"Options": {
			"properties": {
				"scale": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/ScaleOptions"
				},
				"resources": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/ResourcesOptions"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"ResourcesLimitsOptions": {
			"properties": {
				"cpu": {
					"pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
					"type": "string"
				},
				"memory": {
					"pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
					"type": "string"
				},
				"concurrency": {
					"type": "integer",
					"minimum": 0
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"ResourcesOptions": {
			"properties": {
				"requests": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/ResourcesRequestsOptions"
				},
				"limits": {
					"$schema": "http://json-schema.org/draft-04/schema#",
					"$ref": "#/definitions/ResourcesLimitsOptions"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"ResourcesRequestsOptions": {
			"properties": {
				"cpu": {
					"pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
					"type": "string"
				},
				"memory": {
					"pattern": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
					"type": "string"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"RunSpec": {
			"properties": {
				"volumes": {
					"items": {
						"$schema": "http://json-schema.org/draft-04/schema#",
						"$ref": "#/definitions/Volume"
					},
					"type": "array",
					"description": "List of volumes to be mounted to the function"
				},
				"envs": {
					"items": {
						"$ref": "#/definitions/Env"
					},
					"type": "array",
					"description": "Env variables to be set"
				}
			},
			"additionalProperties": false,
			"type": "object",
			"description": "RunSpec"
		},
		"ScaleOptions": {
			"properties": {
				"min": {
					"type": "integer",
					"minimum": 0
				},
				"max": {
					"type": "integer",
					"minimum": 0
				},
				"metric": {
					"enum": [
						"concurrency",
						"rps"
					],
					"type": "string"
				},
				"target": {
					"type": "number",
					"minimum": 0
				},
				"utilization": {
					"maximum": 100,
					"minimum": 1,
					"type": "number"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"Volume": {
			"properties": {
				"secret": {
					"type": "string"
				},
				"configMap": {
					"type": "string"
				},
				"path": {
					"type": "string"
				}
			},
			"additionalProperties": false,
			"type": "object",
			"oneOf": [
				{
					"required": [
						"secret"
					],
					"title": "secret"
				},
				{
					"required": [
						"configMap"
					],
					"title": "configmap"
				}
			]
		}
	}
}